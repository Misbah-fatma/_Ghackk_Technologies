{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/Projects/assignemnt/client/src/Components/Favourite.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favorites = () => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    // Fetch the user's favorite webtoons from the backend\n    const fetchFavorites = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/favourites/details`);\n        const data = await response.json();\n        console.log(\"Fetched favorites:\", data); // Log the response data to check its structure\n        if (Array.isArray(data)) {\n          setFavorites(data); // Set only if the response is an array\n        } else {\n          console.error(\"Unexpected data format:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching favorites:\", error);\n      }\n    };\n    fetchFavorites();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Favorite Webtoons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), favorites.length > 0 ? favorites.map(fav => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: fav.webtoonId.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: fav.webtoonId.image,\n        alt: fav.webtoonId.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, fav.webtoonId._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No favorites yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Favorites, \"gYNGUuNbE7AW8shO5JZPpsJJ/gw=\");\n_c = Favorites;\nexport default Favorites;\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Favorites","_s","favorites","setFavorites","fetchFavorites","response","fetch","data","json","console","log","Array","isArray","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","fav","webtoonId","title","src","image","alt","_id","_c","$RefreshReg$"],"sources":["/Users/macbookair/Desktop/Projects/assignemnt/client/src/Components/Favourite.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Favorites = () => {\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    // Fetch the user's favorite webtoons from the backend\n    const fetchFavorites = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/favourites/details`);\n        const data = await response.json();\n        console.log(\"Fetched favorites:\", data); // Log the response data to check its structure\n        if (Array.isArray(data)) {\n          setFavorites(data);  // Set only if the response is an array\n        } else {\n          console.error(\"Unexpected data format:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching favorites:\", error);\n      }\n    };\n\n    fetchFavorites();\n  }, []);\n\n  return (\n    <div>\n      <h2>Your Favorite Webtoons</h2>\n      {favorites.length > 0 ? (\n        favorites.map((fav) => (\n          <div key={fav.webtoonId._id}>\n            <h3>{fav.webtoonId.title}</h3>\n            <img src={fav.webtoonId.image} alt={fav.webtoonId.title} />\n          </div>\n        ))\n      ) : (\n        <p>No favorites yet.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Favorites;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,CAAC;QAC5E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC,CAAC,CAAC;QACzC,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;UACvBJ,YAAY,CAACI,IAAI,CAAC,CAAC,CAAE;QACvB,CAAC,MAAM;UACLE,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEN,IAAI,CAAC;QAChD;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDT,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BhB,SAAS,CAACiB,MAAM,GAAG,CAAC,GACnBjB,SAAS,CAACkB,GAAG,CAAEC,GAAG,iBAChBtB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAKO,GAAG,CAACC,SAAS,CAACC;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9BnB,OAAA;QAAKyB,GAAG,EAAEH,GAAG,CAACC,SAAS,CAACG,KAAM;QAACC,GAAG,EAAEL,GAAG,CAACC,SAAS,CAACC;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFnDG,GAAG,CAACC,SAAS,CAACK,GAAG;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGtB,CACN,CAAC,gBAEFnB,OAAA;MAAAe,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}